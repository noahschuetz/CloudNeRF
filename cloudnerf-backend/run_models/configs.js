import { join } from "path";

export const runModelsConfigs = [
	{
		modelId: "instantngp",
		displayName: "Instant-NGP",
		dockerImage: "dromni/nerfstudio",
		installCmd: "docker",
		installCmdArgs: ["pull", "dromni/nerfstudio:1.0.0"],
		runCmd: "docker",
		runCmdArgs: [
			"run",
			"--gpus",
			"all",
			"-v",
			`${process.env.ROOT_DIR}/tmp/instantngp/:/workspace/`,
			"--rm",
			"--shm-size=12gb",
			"dromni/nerfstudio:1.0.0",
			"ns-train",
			"instant-ngp",
			"--data",
			"/workspace/data",
		],
	},
	// {
	// 	modelId: "neus",
	// 	displayName: "Neus",
	// 	dockerImage: "dromni/nerfstudio",
	// 	installCmd: "docker",
	// 	installCmdArgs: ["pull", "dromni/nerfstudio:1.0.0"],
	// 	runCmd: "docker",
	// 	runCmdArgs: [
	// 		"run",
	// 		"--gpus",
	// 		"all",
	// 		"-v",
	// 		`${process.env.ROOT_DIR}/tmp/neus/:/workspace/`,
	// 		"--rm",
	// 		"--shm-size=12gb",
	// 		"dromni/nerfstudio:1.0.0",
	// 		"ns-train",
	// 		"neus",
	// 		"--data",
	// 		"/workspace/data",
	// 	],
	// },
	{
		modelId: "nerfacto",
		displayName: "Nerfacto",
		dockerImage: "dromni/nerfstudio",
		installCmd: "docker",
		installCmdArgs: ["pull", "dromni/nerfstudio:1.0.0"],
		runCmd: "docker",
		runCmdArgs: [
			"run",
			"--gpus",
			"all",
			"-v",
			`${process.env.ROOT_DIR}/tmp/nerfacto/:/workspace/`,
			"--rm",
			"--shm-size=12gb",
			"dromni/nerfstudio:1.0.0",
			"ns-train",
			"nerfacto",
			"--pipeline.model.predict-normals",
			"True",
			"--timestamp",
			"latest",
			"--data",
			"/workspace/data",
		],
		exportGeometryCmd: "docker",
		exportGeometryCmdArgs: [
			"run",
			"--gpus",
			"all",
			"-v",
			`${process.env.ROOT_DIR}/tmp/nerfacto/:/workspace/`,
			"--rm",
			"--shm-size=12gb",
			"dromni/nerfstudio:1.0.0",
			"ns-export",
			"poisson",
			"--load-config",
			"outputs/data/nerfacto/latest/config.yml",
			"--output-dir",
			"results",
		],
	},
	// {
	// 	modelId: "mipnerf",
	// 	displayName: "Mip-NeRF",
	// 	dockerImage: "dromni/nerfstudio",
	// 	installCmd: "docker",
	// 	installCmdArgs: ["pull", "dromni/nerfstudio:1.0.0"],
	// 	runCmd: "docker",
	// 	runCmdArgs: [
	// 		"run",
	// 		"--gpus",
	// 		"all",
	// 		"-v",
	// 		`${process.env.ROOT_DIR}/tmp/mipnerf/:/workspace/`,
	// 		"--rm",
	// 		"--shm-size=12gb",
	// 		"dromni/nerfstudio:1.0.0",
	// 		"ns-train",
	// 		"mipnerf",
	// 		"--data",
	// 		"/workspace/data",
	// 	],
	// },
	{
		modelId: "kplanes",
		displayName: "K-Planes",
		dockerImage: "cloudnerf/kplanes",
		installCmd: "docker",
		installCmdArgs: [
			"build",
			"-t",
			"cloudnerf/kplanes",
			"-",
			"<",
			join(process.env.ROOT_DIR, "/run_models/dockerfiles/Dockerfile.kplanes"),
		],
		runCmd: "docker",
		runCmdArgs: [
			"run",
			"--gpus",
			"all",
			"-v",
			`${process.env.ROOT_DIR}/tmp/kplanes/:/workspace/`,
			"--rm",
			"--shm-size=12gb",
			"cloudnerf/kplanes",
			"ns-train",
			"kplanes",
			"--timestamp",
			"latest",
			"--data",
			"/workspace/data",
			"nerfstudio-data",
		],
	},
	{
		modelId: "kplanes-dynamic",
		displayName: "K-Planes (for dynamic scenes)",
		dockerImage: "cloudnerf/kplanes",
		installCmd: "docker",
		installCmdArgs: [
			"build",
			"-t",
			"cloudnerf/kplanes",
			"-",
			"<",
			join(process.env.ROOT_DIR, "/run_models/dockerfiles/Dockerfile.kplanes"),
		],
		runCmd: "docker",
		runCmdArgs: [
			"run",
			"--gpus",
			"all",
			"-v",
			`${process.env.ROOT_DIR}/tmp/kplanes-dynamic/:/workspace/`,
			"--rm",
			"--shm-size=12gb",
			"cloudnerf/kplanes",
			"ns-train",
			"kplanes-dynamic",
			"--data",
			"/workspace/data",
		],
	},
];

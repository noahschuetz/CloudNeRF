import { join } from "path";

export const runModelsConfigs = [
	{
		modelId: "instant-ngp",
		displayName: "Instant-NGP",
		dockerImage: "nerfstudio/nerfstudio",
		installCmd: ["docker", "pull", "nerfstudio/nerfstudio:latest"],
		runCmdFn: (datasetId, datasetType) => [
			"docker",
			"run",
			"--gpus",
			"all",
			"-v",
			`${process.env.ROOT_DIR}/tmp/instant-ngp/:/workspace/`,
			"--rm",
			"--shm-size=12gb",
			"nerfstudio/nerfstudio:latest",
			"ns-train",
			"instant-ngp",
			"--timestamp",
			"latest",
			"--viewer.quit-on-train-completion",
			"True",
			"--data",
			`/workspace/data/${datasetId}`,
			datasetType,
			datasetType === "nerfstudio-data" ? "--downscale-factor" : "",
			datasetType === "nerfstudio-data" ? "4" : "",

		],
		exportCmdFn: (datasetId) => [
			"docker",
			"run",
			"--gpus",
			"all",
			"-v",
			`${process.env.ROOT_DIR}/tmp/instant-ngp/:/workspace/`,
			"--rm",
			"--shm-size=12gb",
			"nerfstudio/nerfstudio:latest",
			"ns-export",
			"tsdf",
			"--load-config",
			`outputs/${datasetId}/instant-ngp/latest/config.yml`,
			"--output-dir",
			process.env.MESH_RESULTS_DIR_NAME,
		],
		exportedMeshFile: "tsdf_mesh.ply"
	},
	{
		modelId: "nerfacto",
		displayName: "Nerfacto",
		dockerImage: "nerfstudio/nerfstudio",
		installCmd: ["docker", "pull", "nerfstudio/nerfstudio:latest"],
		runCmdFn: (datasetId, datasetType) => [
			"docker",
			"run",
			"--gpus",
			"all",
			"-v",
			`${process.env.ROOT_DIR}/tmp/nerfacto/:/workspace/`,
			"--rm",
			"--shm-size=12gb",
			"nerfstudio/nerfstudio:latest",
			"ns-train",
			"nerfacto",
			"--pipeline.model.predict-normals",
			"True",
			"--viewer.quit-on-train-completion",
			"True",
			"--timestamp",
			"latest",
			"--data",
			`/workspace/data/${datasetId}`,
			datasetType,
			datasetType === "nerfstudio-data" ? "--downscale-factor" : "",
			datasetType === "nerfstudio-data" ? "4" : "",
		],
		exportCmdFn: (datasetId) => [
			"docker",
			"run",
			"--gpus",
			"all",
			"-v",
			`${process.env.ROOT_DIR}/tmp/nerfacto/:/workspace/`,
			"--rm",
			"--shm-size=12gb",
			"nerfstudio/nerfstudio:latest",
			"ns-export",
			"poisson",
			"--load-config",
			`outputs/${datasetId}/nerfacto/latest/config.yml`,
			"--output-dir",
			process.env.MESH_RESULTS_DIR_NAME,
		],
		exportedMeshFile: "poisson_mesh.ply"
	},
	{
		modelId: "kplanes",
		displayName: "K-Planes",
		dockerImage: "cloudnerf/kplanes",
		installCmd: [
			"docker",
			"build",
			"-t",
			"cloudnerf/kplanes",
			"-",
			"<",
			join(process.env.ROOT_DIR, "/run_models/dockerfiles/Dockerfile.kplanes"),
		],
		runCmdFn: (datasetId, datasetType) => [
			"docker",
			"run",
			"--gpus",
			"all",
			"-v",
			`${process.env.ROOT_DIR}/tmp/kplanes/:/workspace/`,
			"--rm",
			"--shm-size=12gb",
			"cloudnerf/kplanes",
			"ns-train",
			"kplanes",
			"--timestamp",
			"latest",
			"--viewer.quit-on-train-completion",
			"True",
			"--data",
			`/workspace/data/${datasetId}`,
			datasetType,
			datasetType === "nerfstudio-data" ? "--downscale-factor" : "",
			datasetType === "nerfstudio-data" ? "4" : "",
		],
		exportCmdFn: (datasetId) => [
			"docker",
			"run",
			"--gpus",
			"all",
			"-v",
			`${process.env.ROOT_DIR}/tmp/kplanes/:/workspace/`,
			"--rm",
			"--shm-size=12gb",
			"cloudnerf/kplanes",
			"ns-export",
			"tsdf",
			"--load-config",
			`outputs/${datasetId}/kplanes/latest/config.yml`,
			"--output-dir",
			process.env.MESH_RESULTS_DIR_NAME,
		],
		exportedMeshFile: "tsdf_mesh.ply"
	},
];
